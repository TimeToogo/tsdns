name: build

on:
  - push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            cross: false
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            cross: true
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            cross: true
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            cross: true
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            cross: true
            target: aarch64-apple-darwin
          - os: windows-latest
            cross: false
            target: x86_64-pc-windows-msvc
            suffix: .exe
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{matrix.target}}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: build
          use-cross: ${{matrix.cross}}
          args: --release --all-features --target ${{matrix.target}}
      - uses: actions/upload-artifact@v2
        with:
          name: tsdns-${{matrix.target}}
          path: target/${{matrix.target}}/release/tsdns${{matrix.suffix}}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      # Deploy artifact to https://tsdns.elliotlevin.dev
      - name: Deploy to S3
        run: >
          aws s3 cp target/${{matrix.target}}/release/tsdns${{matrix.suffix}} s3://tsdns/tsdns-${{matrix.target}}${{matrix.suffix}}
          --acl=public-read 
          --cache-control max-age=31536000
          --metadata-directive REPLACE
        shell: bash
      - name: Invalidate CloudFront
        run: aws cloudfront create-invalidation --distribution-id=E29YYL1CG6CG08 --paths '/*'
      